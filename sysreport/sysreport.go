package sysreport

import (
	"os"
)

// NewReport inspects the system and returns a ScanResult that is compatible with
// the official LanSweeper Agent. Specifying agentVersion alters the version included
// in the report but doesn't make any effort to conform to a report generated by the
// specified version.
func NewReport(agentVersion string) ScanResult {
	var scan ScanResult

	scan.ScanResultType = 0
	scan.ScanType = 0
	scan.LsAgentVersion = agentVersion
	scan.AssetErrors = make([]string, 0)
	scan.GraphicsCards = make([]scanDevice, 0)
	scan.PciCards = make([]scanDevice, 0)
	scan.OpticalDrives = make([]string, 0)
	scan.Volumes = make([]string, 0)

	scan.Uptime = getUptime()

	scan.Software = getPackages()

	scan.SystemInfo.TotalMemory = getTotalMemory()

	scan.SystemInfo.CPUName, scan.SystemInfo.CPUCount = getCPUInfo()

	kernelInfo := getKernelInfo()

	scan.SystemInfo.KernelName = kernelInfo.name                  // Linux
	scan.SystemInfo.KernelRelease = kernelInfo.release            // 4.18.0-305.el8.x86_64
	scan.SystemInfo.KernelVersion = kernelInfo.version            // #1 SMP Thu Apr 29 08:54:30 EDT 2021
	scan.SystemInfo.MachineHardwareName = kernelInfo.architecture // x86_64
	scan.SystemInfo.HardwarePlatform = kernelInfo.architecture    // x86_64
	scan.SystemInfo.ProcessorType = kernelInfo.architecture       // x86_64

	scan.SystemInfo.OSRelease = getLinuxRelease()
	scan.SystemInfo.OperatingSysem = "GNU/Linux"

	scan.IPAddress, scan.MacAddresses, scan.NetworkDetection = getNetworkInfo()

	hostname, _ := os.Hostname()
	scan.AssetName = hostname
	scan.SystemInfo.NetworkNodeHostname = hostname

	scan.HardDisks = getDisks()

	return scan
}
